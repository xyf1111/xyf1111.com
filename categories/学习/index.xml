<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>学习 - 分类 - CC&#39;s Blog</title>
        <link>http://example.org/categories/%E5%AD%A6%E4%B9%A0/</link>
        <description>学习 - 分类 - CC&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 02 Nov 2021 09:40:17 &#43;0800</lastBuildDate><atom:link href="http://example.org/categories/%E5%AD%A6%E4%B9%A0/" rel="self" type="application/rss+xml" /><item>
    <title>Go测试从零到溜2-网络测试</title>
    <link>http://example.org/go-test2/</link>
    <pubDate>Tue, 02 Nov 2021 09:40:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/go-test2/</guid>
    <description><![CDATA[httptest 在Web开发场景下的单元测试，如果涉及到HTTP请求推荐大家使用Go标准库net/http/httptest进行测试，能够显著提升效率。 在]]></description>
</item><item>
    <title>Go测试从零到溜1-单元测试</title>
    <link>http://example.org/go-test1/</link>
    <pubDate>Sun, 31 Oct 2021 20:48:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/go-test1/</guid>
    <description><![CDATA[Go语言测试 go test工具 Go语言中的测试依赖go test命令。编写测试代码和编写普通的Go代码过程是类似的，并不需要学习新的语法、规则和工]]></description>
</item><item>
    <title>RabbitMQ6</title>
    <link>http://example.org/rabbitmq6/</link>
    <pubDate>Wed, 29 Sep 2021 20:49:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/rabbitmq6/</guid>
    <description><![CDATA[远程过程调用(RPC) 在第二个教程中，我们学会了如何使用工作队列在多个worker之间分配耗时的任务。 但是，如果我们需要在远程计算机上运行函]]></description>
</item><item>
    <title>RabbitMQ5</title>
    <link>http://example.org/rabbitmq5/</link>
    <pubDate>Sat, 25 Sep 2021 18:06:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/rabbitmq5/</guid>
    <description><![CDATA[topic交换器(主题交换器) 发送到topic交换器的消息不能具有随意的routing_key &ndash; 它必须是单词列表，以点分割。这些词可以是任何]]></description>
</item><item>
    <title>RabbitMQ4</title>
    <link>http://example.org/rabbitmq4/</link>
    <pubDate>Sun, 15 Aug 2021 19:55:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/rabbitmq4/</guid>
    <description><![CDATA[路由 在上一教程中，我们构建了一个简单的日志记录系统。我们能够向许多接收者广播日志消息。 在本教程中，我们将它添加一个特性&ndash;我们将使]]></description>
</item><item>
    <title>Go Study18</title>
    <link>http://example.org/go-study18/</link>
    <pubDate>Sun, 25 Jul 2021 21:37:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/go-study18/</guid>
    <description><![CDATA[在web开发中一个不可避免的环节就是对请求参数进行校验，通常我们对在代码中定义和请求参数相对应的模型(结构体)，借助模型绑定快捷地解析请求中]]></description>
</item><item>
    <title>Go Study17</title>
    <link>http://example.org/go-study17/</link>
    <pubDate>Thu, 22 Jul 2021 22:44:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/go-study17/</guid>
    <description><![CDATA[select语句介绍 Go语言中的select语句用于监控并选择一组case语句执行相应的代码。它看起来类似于switch语句，但是selec]]></description>
</item><item>
    <title>Go Study 16</title>
    <link>http://example.org/go-study-16/</link>
    <pubDate>Sun, 18 Jul 2021 21:25:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/go-study-16/</guid>
    <description><![CDATA[复制 将切片a中的元素复制到切片b中。 最简单的、最常用的方法就是使用内置的copy方法 1 2 3 // 一次将内存申请到位 b = make([]T, len(a)) copy(b, a) 除了使用内置的co]]></description>
</item><item>
    <title>RabbitMQ3</title>
    <link>http://example.org/rabbitmq3/</link>
    <pubDate>Wed, 14 Jul 2021 20:55:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/rabbitmq3/</guid>
    <description><![CDATA[发布订阅 在上一个教程中，我们创建了一个工作队列。工作队列背后的假设是每个任务只传递给一个工人。在这一部分中，我们将做一些完全不同的事情&nd]]></description>
</item><item>
    <title>RabbitMQ2</title>
    <link>http://example.org/rabbitmq2/</link>
    <pubDate>Mon, 28 Jun 2021 21:21:33 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/rabbitmq2/</guid>
    <description><![CDATA[任务队列/工作队列 在第一个教程中，我们编写程序从命名的队列发送和接收消息。在这一节中，我们将创建一个工作队列，该队列将用于多个工人之间分配耗]]></description>
</item></channel>
</rss>
